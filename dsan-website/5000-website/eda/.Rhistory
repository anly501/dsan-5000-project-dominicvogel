plt.figure(figsize=(10, 6))
sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, alpha=0.7)
# Set plot labels and title
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
# Display the plot
plt.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
full_barttorvik.columns
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == "Champions"]
# Set seaborn style
sns.set(style="whitegrid")
# Create a scatter plot
plt.figure(figsize=(10, 6))
sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, alpha=0.7)
# Set plot labels and title
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
# Display the plot
plt.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
full_barttorvik.columns
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == "Champions"]
filt1
# Set seaborn style
sns.set(style="whitegrid")
# Create a scatter plot
plt.figure(figsize=(10, 6))
sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, alpha=0.7)
# Set plot labels and title
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
# Display the plot
plt.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
full_barttorvik.columns
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == "7"]
filt1
# Set seaborn style
sns.set(style="whitegrid")
# Create a scatter plot
plt.figure(figsize=(10, 6))
sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, alpha=0.7)
# Set plot labels and title
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
# Display the plot
plt.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
full_barttorvik.columns
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == "7"]
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))
sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, alpha=0.7)
for line in range(0, filt1.shape[0]):
scatter.text(filt1['ADJDE'].iloc[line], filt1['ADJOE'].iloc[line],  filt1['TEAM'].iloc[line] + ' ' + str(filt1['YEAR'].iloc[line]),
horizontalalignment='left', size='medium', color='black')
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
plt.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
# Filter based on the 'POSTSEASON' value you want
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == 'Champions']
# Set the style and create the scatter plot
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))
scatter = sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, hue='POSTSEASON', palette='viridis',
legend='full', alpha=0.7)
# Label each point with team and year
for line in range(0, filt1.shape[0]):
scatter.text(filt1['ADJDE'].iloc[line], filt1['ADJOE'].iloc[line],
filt1['TEAM'].iloc[line] + ' ' + str(filt1['YEAR'].iloc[line]),
horizontalalignment='left', size='medium', color='black')
# Set plot title and labels
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
# Show the plot
plt.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
# Filter based on the 'POSTSEASON' value you want
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
# Set the style and create the scatter plot
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))
scatter = sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, hue='POSTSEASON', palette='viridis',
legend='full', alpha=0.7)
# Label each point with team and year
for line in range(0, filt1.shape[0]):
scatter.text(filt1['ADJDE'].iloc[line], filt1['ADJOE'].iloc[line],
filt1['TEAM'].iloc[line] + ' ' + str(filt1['YEAR'].iloc[line]),
horizontalalignment='left', size='medium', color='black')
# Set plot title and labels
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
# Show the plot
plt.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
# Filter based on the 'POSTSEASON' value you want
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
# Set the style and create the scatter plot
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))
scatter = sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, hue='POSTSEASON', palette='viridis', alpha=0.7)
# Label each point with team and year
for line in range(0, filt1.shape[0]):
scatter.text(filt1['ADJDE'].iloc[line], filt1['ADJOE'].iloc[line],filt1['TEAM'].iloc[line] + ' ' + str(filt1['YEAR'].iloc[line]),
horizontalalignment='left', size='medium', color='black')
# Set plot title and labels
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
# Show the plot
plt.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
# Filter based on the 'POSTSEASON' value you want
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
# Set the style and create the scatter plot
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))
scatter = sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, hue='POSTSEASON', palette='viridis', alpha=0.7)
# Label each point with team and year
for line in range(0, filt1.shape[0]):
scatter.text(filt1['ADJDE'].iloc[line], filt1['ADJOE'].iloc[line],filt1['TEAM'].iloc[line] + ' ' + str(filt1['YEAR'].iloc[line]),
horizontalalignment='left', size='medium', color='black')
# Set plot title and labels
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
# Show the plot
plt.show()
png("scatter_plot.png", width = 1000, height = 600)
print(scatter)
dev.off()
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
!pip install mplcursors
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import mplcursors
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))
scatter = sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, hue='POSTSEASON', palette='viridis',
legend='full', alpha=0.7)
for line in range(0, filt1.shape[0]):
scatter.text(filt1['ADJDE'].iloc[line], filt1['ADJOE'].iloc[line],
filt1['TEAM'].iloc[line] + ' ' + str(filt1['YEAR'].iloc[line]),
horizontalalignment='left', size='medium', color='black')
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
# Add hoverable tooltips
mplcursors.cursor(hover=True)
# Show the plot
plt.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))
scatter = sns.scatterplot(x='ADJDE', y='ADJOE', data=filt1, hue='POSTSEASON', palette='viridis',
legend='full', alpha=0.7)
for line in range(0, filt1.shape[0]):
scatter.text(filt1['ADJDE'].iloc[line], filt1['ADJOE'].iloc[line],
filt1['TEAM'].iloc[line] + ' ' + str(filt1['YEAR'].iloc[line]),
horizontalalignment='left', size='medium', color='black')
plt.title('Scatter Plot of ADJOE against ADJDE for last 10 champions')
plt.xlabel('Adjusted Defensive Efficiency (ADJDE)')
plt.ylabel('Adjusted Offensive Efficiency (ADJOE)')
mplcursors.cursor(hover=True)
plt.show()
%matplotlib notebook
reticulate::repl_python()
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import mplcursors
pip install plotly
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import mplcursors
!pip install plotly
import pandas as pd
import plotly.express as px
full_barttorvik = pd.read_csv("../data/cbb.csv")
# Filter based on the 'POSTSEASON' value you want
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == 'Champions']
# Create scatter plot with Plotly Express
fig = px.scatter(filt1, x='ADJDE', y='ADJOE', color='POSTSEASON', hover_data=['TEAM', 'YEAR'],
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency (ADJDE)', 'ADJOE': 'Adjusted Offensive Efficiency (ADJOE)'})
# Show the plot
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(filt1, x='ADJDE', y='ADJOE', color='POSTSEASON', hover_data=['TEAM', 'YEAR'],
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency (ADJDE)', 'ADJOE': 'Adjusted Offensive Efficiency (ADJOE)'})
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(filt1, x='ADJDE', y='ADJOE', color='POSTSEASON', hover_data=['TEAM', 'YEAR'],
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency (ADJDE)', 'ADJOE': 'Adjusted Offensive Efficiency (ADJOE)'})
for i, row in filt1.iterrows():
fig.add_annotation(x=row['ADJDE'], y=row['ADJOE'], text=f"{row['TEAM']} {row['YEAR']}",
showarrow=True, arrowhead=4, ax=0, ay=-40)
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(filt1, x='ADJDE', y='ADJOE', color='POSTSEASON', hover_data=['TEAM', 'YEAR'],
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency (ADJDE)', 'ADJOE': 'Adjusted Offensive Efficiency (ADJOE)'},
size_max=30)
for i, row in filt1.iterrows():
fig.add_annotation(x=row['ADJDE'], y=row['ADJOE'], text=f"{row['TEAM']} {row['YEAR']}",
showarrow=True, arrowhead=4, ax=0, ay=-40, font=dict(size=10))  # Adjust text size
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(filt1, x='ADJDE', y='ADJOE', color='POSTSEASON', hover_data=['TEAM', 'YEAR'],
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency (ADJDE)', 'ADJOE': 'Adjusted Offensive Efficiency (ADJOE)'},
size_max=30)  # Adjust the maximum dot size
# Add text annotations for each point
for i, row in filt1.iterrows():
fig.add_annotation(x=row['ADJDE'], y=row['ADJOE'], text=f"{row['TEAM']} {row['YEAR']}",
showarrow=True, arrowhead=4, ax=0, ay=-40, font=dict(size=10))  # Adjust text size
# Remove 'POSTSEASON' from hover information
fig.update_traces(hoverinfo='text+x+y')
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(filt1, x='ADJDE', y='ADJOE', color='POSTSEASON', hover_data={'TEAM', 'YEAR'},
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency (ADJDE)', 'ADJOE': 'Adjusted Offensive Efficiency (ADJOE)'},
size_max=30)  # Adjust the maximum dot size
# Add text annotations for each point
for i, row in filt1.iterrows():
fig.add_annotation(x=row['ADJDE'], y=row['ADJOE'], text=f"{row['TEAM']} {row['YEAR']}",
showarrow=True, arrowhead=4, ax=0, ay=-40, font=dict(size=10))  # Adjust text size
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = go.Figure()
# Scatter plot for champions
fig.add_trace(go.Scatter(
x=filt1['ADJDE'],
y=filt1['ADJOE'],
mode='markers',
marker=dict(color='red', size=10),
text=filt1['TEAM'] + ' ' + filt1['YEAR'],
name='Champion'
))
# Scatter plot for other points
fig.add_trace(go.Scatter(
x=full_barttorvik[full_barttorvik['POSTSEASON'] != 'Champion']['ADJDE'],
y=full_barttorvik[full_barttorvik['POSTSEASON'] != 'Champion']['ADJOE'],
mode='markers',
marker=dict(color='blue', size=8),
text=full_barttorvik[full_barttorvik['POSTSEASON'] != 'Champion']['TEAM'] + ' ' +
full_barttorvik[full_barttorvik['POSTSEASON'] != 'Champion']['YEAR'],
name='Other'
))
# Update layout
fig.update_layout(
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
xaxis=dict(title='Adjusted Defensive Efficiency (ADJDE)'),
yaxis=dict(title='Adjusted Offensive Efficiency (ADJOE)'),
hovermode='closest'
)
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = go.Figure()
# Scatter plot for champions
fig.add_trace(go.Scatter(
x=filt1['ADJDE'],
y=filt1['ADJOE'],
mode='markers',
marker=dict(color='red', size=100),
text=filt1['TEAM'] + ' ' + filt1['YEAR'],
name='Champion'
))
# Scatter plot for other points
fig.add_trace(go.Scatter(
x=full_barttorvik[full_barttorvik['POSTSEASON'] != 'Champion']['ADJDE'],
y=full_barttorvik[full_barttorvik['POSTSEASON'] != 'Champion']['ADJOE'],
mode='markers',
marker=dict(color='blue', size=8),
text=full_barttorvik[full_barttorvik['POSTSEASON'] != 'Champion']['TEAM'] + ' ' +
full_barttorvik[full_barttorvik['POSTSEASON'] != 'Champion']['YEAR'],
name='Other'
))
# Update layout
fig.update_layout(
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
xaxis=dict(title='Adjusted Defensive Efficiency (ADJDE)'),
yaxis=dict(title='Adjusted Offensive Efficiency (ADJOE)'),
hovermode='closest'
)
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(filt1, x='ADJDE', y='ADJOE', color='POSTSEASON', hover_data=['TEAM', 'YEAR'],
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency (ADJDE)', 'ADJOE': 'Adjusted Offensive Efficiency (ADJOE)'},
size_max=300)
for i, row in filt1.iterrows():
fig.add_annotation(x=row['ADJDE'], y=row['ADJOE'], text=f"{row['TEAM']} {row['YEAR']}",
showarrow=True, arrowhead=4, ax=0, ay=-40, font=dict(size=100))  # Adjust text size
# Show the plot
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(filt1, x='ADJDE', y='ADJOE', color='POSTSEASON', hover_data=['TEAM', 'YEAR'],
title='Scatter Plot of ADJOE against ADJDE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency (ADJDE)', 'ADJOE': 'Adjusted Offensive Efficiency (ADJOE)'},
size_max=300)
for i, row in filt1.iterrows():
fig.add_annotation(x=row['ADJDE'], y=row['ADJOE'], text=f"{row['TEAM']} {row['YEAR']}",
showarrow=True, arrowhead=4, ax=0, ay=-40, font=dict(size=30))  # Adjust text size
# Show the plot
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(
filt1,
x='ADJDE',
y='ADJOE',
hover_data=['Team', 'Year'],
title='ADJDE vs ADJOE for POSTSEASON = 7',
labels={'ADJDE': 'Adjusted Defensive Efficiency', 'ADJOE': 'Adjusted Offensive Efficiency'}
)
fig.show()
import pandas as pd
import plotly.express as px
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(
filt1,
x='ADJDE',
y='ADJOE',
hover_data=['Team', 'Year'],
title='ADJDE vs ADJOE for POSTSEASON = 7',
labels={'ADJDE': 'Adjusted Defensive Efficiency', 'ADJOE': 'Adjusted Offensive Efficiency'}
)
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(
filt1,
x='ADJDE',
y='ADJOE',
hover_data=['TEAM', 'YEAR'],
title='ADJDE vs ADJOE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency', 'ADJOE': 'Adjusted Offensive Efficiency'}
)
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(
filt1,
x='ADJDE',
y='ADJOE',
hover_data=['Team', 'Year'],
title='ADJDE vs ADJOE for last 10 champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency', 'ADJOE': 'Adjusted Offensive Efficiency'}
)
fig.show()
full_barttorvik = pd.read_csv("../data/cbb.csv")
filt1 = full_barttorvik[full_barttorvik['POSTSEASON'] == '7']
fig = px.scatter(
filt1,
x='ADJDE',
y='ADJOE',
text='TEAM',
title='ADJDE vs ADJOE for Last 10 Champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency', 'ADJOE': 'Adjusted Offensive Efficiency'},
)
fig.update_traces(textposition='top right', mode='text+markers', marker=dict(size=8))
fig.show()
reticulate::repl_python()
import pandas as pd
import plotly.express as px
import matplotlib.pyplot as plt
import seaborn as sns
full_barttorvik = pd.read_csv("../data/cbb.csv")
barthag = full_barttorvik["BARTHAG"]
columns = ["ADJOE", "ADJDE", "3P_O", "WAB", "Made_Tournament"]
full_barttorvik[columns].describe()
#| output: false
filt1 = full_barttorvik.loc[full_barttorvik['POSTSEASON'] == 7].copy()
filt1['Label'] = filt1['TEAM'] + ' ' + filt1['YEAR'].astype(str)
fig = px.scatter(
filt1,
x='ADJDE',
y='ADJOE',
text='Label',
title='ADJDE vs ADJOE for Last 10 Champions',
labels={'ADJDE': 'Adjusted Defensive Efficiency', 'ADJOE': 'Adjusted Offensive Efficiency'},
)
fig.update_traces(
textposition='top right',
mode='text+markers',
marker=dict(size=13),
textfont=dict(size=15)
)
fig.update_layout(
margin=dict(l=0, r=0, t=40, b=0),
height=500,
xaxis=dict(
tickmode='linear',
dtick=5,
title=dict(text='Adjusted Defensive Efficiency', font=dict(size=14))
),
yaxis=dict(
title=dict(text='Adjusted Offensive Efficiency', font=dict(size=14))
),
title=dict(text='ADJDE vs ADJOE for Last 10 Champions', font=dict(size=24))
)
fig.show()
#| output: false
average_3p_o_by_year = full_barttorvik.groupby('YEAR')['3P_O'].mean().reset_index()
plt.figure(figsize=(10, 6))
sns.barplot(x='YEAR', y='3P_O', data=average_3p_o_by_year, hue = '3P_O', legend= False)
plt.title('Average Team Three Point Percentage By Year')
plt.xlabel('Year')
plt.ylabel('Three Point Percentage')
plt.xticks(rotation=45)
for index, value in enumerate(average_3p_o_by_year['3P_O']):
plt.text(index, value + 0.1, f'{value:.2f}', ha='center', va='bottom')
plt.show()
#| output: false
custom_colors = sns.color_palette("viridis")
plt.figure()
sns.histplot(full_barttorvik['BARTHAG'], bins=20, color=custom_colors[0], edgecolor='black', kde=False)
plt.title('Distribution of BARTHAG Rating')
plt.xlabel('Probability of Beating an Average D1 Opponent')
plt.ylabel('Frequency')
plt.show()
#| output: false
top_conferences = full_barttorvik[full_barttorvik['Made_Tournament'] == 1]['CONF'].value_counts().nlargest(10).index
df_top_10_conferences = full_barttorvik[full_barttorvik['CONF'].isin(top_conferences)]
percentage_data = df_top_10_conferences.groupby('CONF')['Made_Tournament'].mean() * 100
percentage_data = percentage_data.sort_values(ascending=False)
custom_colors = sns.color_palette("flare", len(percentage_data))
plt.figure(figsize=(12, 5))
ax = sns.barplot(x=percentage_data.index, y=percentage_data.values, hue=custom_colors, legend=False)
for p in ax.patches:
percentage_value = p.get_height()
ax.annotate(f'{percentage_value:.2f}%', (p.get_x() + p.get_width() / 2., p.get_height()),
ha='center', va='center', xytext=(0, 10), textcoords='offset points', fontsize=10)
plt.title('% of Tournament Teams from the 10 Conferences with the Most Bids')
plt.xlabel('Conference')
plt.ylabel('Percentage')
plt.ylim(0, 100)
plt.show()
#| output: false
numbered_bart = full_barttorvik.copy()
to_drop = ['TEAM', 'ADJOE', 'ADJDE', '2P_O', '2P_D', 'YEAR', 'TotalRank', 'TotalOffenseRank', 'TotalDefenseRank', 'G', 'SEED', 'YearRank', 'POSTSEASON', 'ADJ_T', 'ORB', 'DRB', 'CONF']
numbered_bart.drop(columns= to_drop, inplace= True)
correlation_matrix = numbered_bart.corr()
plt.figure(figsize=(16, 14))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", linewidths=.5, xticklabels=True, yticklabels=True, cbar_kws={'orientation': 'vertical'})
plt.subplots_adjust(left=0.1, right=0.9, top=0.9, bottom=0.1)
plt.title('Correlation Matrix for full_barttorvik')
plt.savefig('correlation_matrix.png', bbox_inches='tight')
plt.show()
#| output: false
numbered_bart2 = full_barttorvik.copy()
to_drop = ['TEAM', 'ADJOE', 'ADJDE', '2P_O', '2P_D', 'YEAR', 'TotalRank', 'TotalOffenseRank', 'TotalDefenseRank', 'G', 'YearRank', 'Made_Tournament',
'ADJ_T', 'ORB', 'DRB', 'CONF']
numbered_bart2.drop(columns= to_drop, inplace= True)
numbered_bart2 = numbered_bart2[numbered_bart2['POSTSEASON'] != 0]
correlation_matrix = numbered_bart2.corr()
plt.figure(figsize=(16, 14))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", linewidths=.5, xticklabels=True, yticklabels=True, cbar_kws={'orientation': 'vertical'})
plt.subplots_adjust(left=0.1, right=0.9, top=0.9, bottom=0.1)
plt.title('Correlation Matrix for full_barttorvik')
plt.savefig('correlation_matrix2.png', bbox_inches='tight')
plt.show()
#| output: false
plot_columns = ["ADJOE", "ADJDE"]
plt.figure(figsize=(10, 6))
sns.boxplot(data=full_barttorvik[plot_columns], palette='Set2')
plt.title('ADJOE and ADJDE Outlier Analysis')
plt.ylabel('Values')
plt.show()
!pip install requests
quit
install.packages("IRKernel")
install.packages("IRkernel")
library(IRkernel)
IRkernel::installspec(user = FALSE)
install.packages("rmarkdown")
install.packages("rmarkdown")
.libPaths()
install.packages("rmarkdown", lib="C:/Users/davog/anaconda3/Lib/R/library")
install.packages("knitr", lib="C:/Users/davog/anaconda3/Lib/R/library")
install.packages("knitr", lib = "C:/Users/davog/anaconda3/Lib/R/library")
install.packages("knitr", lib = "C:/Users/davog/anaconda3/Lib/R/library")
